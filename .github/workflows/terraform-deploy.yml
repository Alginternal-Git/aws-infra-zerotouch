name: Terraform Deployment

on:
  # Manual trigger in GitHub Actions UI
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment (dev or prod)"
        required: true
        type: choice
        options:
          - dev
          - prod
      service:
        description: "Select which service to deploy"
        required: true
        type: choice
        options:
          - vpc
          - subnets
          - security-groups
          - ec2
          - key-pair
          - eks
          - s3
          - internet-gateway
          - nat-gateway
          - ecr
          - rds

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Dynamic AWS Region Selection
      AWS_REGION: ${{ inputs.environment == 'prod' && 'us-west-2' || 'us-east-1' }}

      # Dynamic Terraform Working Directory
      TF_WORKING_DIR: terraform/environments/${{ inputs.environment }}/${{ inputs.service }}

    steps:
      # -------------------------------------------------------------
      # Step 1: Checkout repository
      # -------------------------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # -------------------------------------------------------------
      # Step 2: Configure AWS Credentials
      # -------------------------------------------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # -------------------------------------------------------------
      # Step 3: Setup Terraform
      # -------------------------------------------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      # -------------------------------------------------------------
      # Step 4: Terraform Init
      # -------------------------------------------------------------
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------------------------------------------
      # Step 5: Terraform Plan
      # -------------------------------------------------------------
      - name: Terraform Plan
        run: terraform plan -var="aws_region=${{ env.AWS_REGION }}"
        working-directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------------------------------------------
      # Step 6: Terraform Apply
      # -------------------------------------------------------------
      - name: Terraform Apply
        run: terraform apply -auto-approve -var="aws_region=${{ env.AWS_REGION }}"
        working-directory: ${{ env.TF_WORKING_DIR }}

      # -------------------------------------------------------------
      # Step 7: Upload PEM key as artifact (NEW)
      # -------------------------------------------------------------
      - name: Upload PEM key as artifact
        if: success() && inputs.service == 'key-pair'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.environment }}-keypair
          path: modules/key-pair/*.pem

      # -------------------------------------------------------------
      # Step 8: Print Deployment Summary
      # -------------------------------------------------------------
      - name: Print Deployment Info
        run: |
          echo "Terraform deployment completed successfully!"
          echo "Environment: ${{ inputs.environment }}"
          echo "Service: ${{ inputs.service }}"
